{"ast":null,"code":"var _jsxFileName = \"/Users/chloebella/Desktop/capstone/team-3-sp23/frontend/src/components/Navbar.js\",\n  _s2 = $RefreshSig$();\nimport { useRef } from \"react\";\nimport \"../styles/Navbar.css\";\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s2();\n  var _s = $RefreshSig$();\n  //it will refer to nav tag\n  const navRef = useRef();\n\n  //take the current element, each time the function is called we will add or remove the classlist from navtag\n  const showNavbar = () => {\n    navRef.current.classList.toggle(\"responsive_nav\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      ref: navRef,\n      children: [/*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/About\",\n        children: \"Game Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n        to: \"/Contact\",\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn nav-close-btn\",\n        onClick: showNavbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-btn\",\n      onClick: showNavbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n  function CustomLink(_ref) {\n    _s();\n    let {\n      to,\n      children,\n      ...props\n    } = _ref;\n    const resolvedPath = useResolvedPath(to);\n    //checks if the path is the exact same. Once it is it would be set to isActive\n    const isActive = useMatch({\n      path: resolvedPath.pathname,\n      end: true\n    });\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: isActive ? \"active\" : \"\",\n      onClick: showNavbar,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: to,\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n  _s(CustomLink, \"Dfq6KH74NsOUUXPzETtO7DGllew=\", false, function () {\n    return [useResolvedPath, useMatch];\n  });\n}\n_s2(Navbar, \"rHA/vuAAXoiUfw/iUIRJEHlIXI0=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useRef","Link","useMatch","useResolvedPath","jsxDEV","_jsxDEV","Navbar","_s2","_s","$RefreshSig$","navRef","showNavbar","current","classList","toggle","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","ref","CustomLink","onClick","_ref","props","resolvedPath","isActive","path","pathname","end","_c","$RefreshReg$"],"sources":["/Users/chloebella/Desktop/capstone/team-3-sp23/frontend/src/components/Navbar.js"],"sourcesContent":["import { useRef } from \"react\";\nimport \"../styles/Navbar.css\";\nimport { Link, useMatch, useResolvedPath } from \"react-router-dom\"\n\nexport default function Navbar() {\n  //it will refer to nav tag\n\tconst navRef = useRef();\n\n  //take the current element, each time the function is called we will add or remove the classlist from navtag\n\tconst showNavbar = () => {\n\t\tnavRef.current.classList.toggle(\"responsive_nav\");\n\t};\n\n\treturn (\n\t\t<header>\n\t\t\t<div className = \"logo\">\n\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t</div>\n\t\t\t<nav ref={navRef}>\n\t\t\t\t<CustomLink to =\"/About\">Game Info</CustomLink>\n\t\t\t\t<CustomLink to =\"/Contact\">About Us</CustomLink>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"nav-btn nav-close-btn\"\n\t\t\t\t\tonClick={showNavbar}>\n\t\t\t\t\t\n\t\t\t\t</button>\n\t\t\t</nav>\n\t\t\t<button className=\"nav-btn\" onClick={showNavbar}>\n\t\t\t\t\n\t\t\t</button>\n\t\t</header>\n\t);\n\t\n\t\n\tfunction CustomLink({ to, children, ...props }) {\n\t\tconst resolvedPath = useResolvedPath(to)\n\t\t//checks if the path is the exact same. Once it is it would be set to isActive\n\t\tconst isActive = useMatch({ path: resolvedPath.pathname, end: true })\n\t\treturn (\n\t\t  <li className={isActive ? \"active\" : \"\"} onClick={showNavbar}>\n\t\t\t<Link to={to} {...props}>\n\t\t\t  {children}\n\t\t\t</Link>\n\t\t  </li>\n\t\t)\n\t}\n}"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAO,sBAAsB;AAC7B,SAASC,IAAI,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC/B;EACD,MAAMC,MAAM,GAAGV,MAAM,EAAE;;EAEtB;EACD,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACxBD,MAAM,CAACE,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,gBAAgB,CAAC;EAClD,CAAC;EAED,oBACCT,OAAA;IAAAU,QAAA,gBACCV,OAAA;MAAKW,SAAS,EAAG,MAAM;MAAAD,QAAA,eACvBV,OAAA,CAACJ,IAAI;QAACgB,EAAE,EAAC,GAAG;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,eACNhB,OAAA;MAAKiB,GAAG,EAAEZ,MAAO;MAAAK,QAAA,gBAChBV,OAAA,CAACkB,UAAU;QAACN,EAAE,EAAE,QAAQ;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC/ChB,OAAA,CAACkB,UAAU;QAACN,EAAE,EAAE,UAAU;QAAAF,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAChDhB,OAAA;QACCW,SAAS,EAAC,uBAAuB;QACjCQ,OAAO,EAAEb;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACNhB,OAAA;MAAQW,SAAS,EAAC,SAAS;MAACQ,OAAO,EAAEb;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;EAIV,SAASE,UAAUA,CAAAE,IAAA,EAA6B;IAAAjB,EAAA;IAAA,IAA5B;MAAES,EAAE;MAAEF,QAAQ;MAAE,GAAGW;IAAM,CAAC,GAAAD,IAAA;IAC7C,MAAME,YAAY,GAAGxB,eAAe,CAACc,EAAE,CAAC;IACxC;IACA,MAAMW,QAAQ,GAAG1B,QAAQ,CAAC;MAAE2B,IAAI,EAAEF,YAAY,CAACG,QAAQ;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC;IACrE,oBACE1B,OAAA;MAAIW,SAAS,EAAEY,QAAQ,GAAG,QAAQ,GAAG,EAAG;MAACJ,OAAO,EAAEb,UAAW;MAAAI,QAAA,eAC9DV,OAAA,CAACJ,IAAI;QAACgB,EAAE,EAAEA,EAAG;QAAA,GAAKS,KAAK;QAAAX,QAAA,EACpBA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAER;EAACb,EAAA,CAXQe,UAAU;IAAA,QACGpB,eAAe,EAEnBD,QAAQ;EAAA;AAS3B;AAACK,GAAA,CA1CuBD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}