{"ast":null,"code":"var _jsxFileName = \"/Users/chloebella/Desktop/capstone/animal-mafia/frontend/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport \"../styles/Main.css\";\nimport axios from \"axios\";\nimport { Typography, CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // if user does not allow us to see their location, this error will show\n  const [locationError, setLocationError] = useState(false);\n\n  // this shows to the user that we are loading search results\n  const [loading, setLoading] = useState(false);\n\n  // this is the user's current location coords\n  const [coords, setCoords] = useState({\n    lat: 0,\n    lng: 0\n  });\n\n  // this is the place that the user had selected to display on the map\n  const [selectedPlace, setSelectedPlace] = useState(null);\n\n  // this is obtained from the yelp api. it is the list of restaurants queried by:\n  // 1. it finds the user's current location\n  // 2. user inputs a restaurant name. you use yelp api to find all restaurants closest to that name, nearest to user\n  const [restaurants, setRestaurants] = useState([]);\n\n  // this useEffect is just getting my current location. user has to enable location sharing in chrome\n  // once it gets my current location, it'll set the `coords` state to store current location\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      if (!position) {\n        setLocationError(true);\n      }\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCoords({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n  }, []);\n\n  // when user clicks the search button, it'll:\n  // 1. search yelp api for restaurants with this name\n  // 2. reset the input field\n  const search = async () => {\n    /*\n    setLoading(true);\n    const { data } = await axios.get(\n      `http://localhost:8000/api/restaurants/${searchTerm}/${coords.lat}/${coords.lng}`\n    );\n     setRestaurants(data);\n    setLoading(false);\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search something\",\n          value: searchTerm,\n          onChange: event => setSearchTerm(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: search,\n          disabled: loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"ySsDdkVDaX0pww76ZZnhvssTroA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","axios","Typography","CircularProgress","jsxDEV","_jsxDEV","Main","_s","searchTerm","setSearchTerm","locationError","setLocationError","loading","setLoading","coords","setCoords","lat","lng","selectedPlace","setSelectedPlace","restaurants","setRestaurants","navigator","geolocation","getCurrentPosition","position","latitude","longitude","search","className","children","placeholder","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/chloebella/Desktop/capstone/animal-mafia/frontend/src/components/Main.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport \"../styles/Main.css\";\n\nimport axios from \"axios\";\n\nimport {\n  Typography,\n  CircularProgress,\n} from \"@mui/material\";\n\n\nconst Main = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // if user does not allow us to see their location, this error will show\n  const [locationError, setLocationError] = useState(false);\n\n  // this shows to the user that we are loading search results\n  const [loading, setLoading] = useState(false);\n\n  // this is the user's current location coords\n  const [coords, setCoords] = useState({ lat: 0, lng: 0 });\n\n  // this is the place that the user had selected to display on the map\n  const [selectedPlace, setSelectedPlace] = useState(null);\n\n  // this is obtained from the yelp api. it is the list of restaurants queried by:\n  // 1. it finds the user's current location\n  // 2. user inputs a restaurant name. you use yelp api to find all restaurants closest to that name, nearest to user\n  const [restaurants, setRestaurants] = useState([]);\n\n\n  // this useEffect is just getting my current location. user has to enable location sharing in chrome\n  // once it gets my current location, it'll set the `coords` state to store current location\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if (!position) {\n        setLocationError(true);\n      }\n      const { latitude, longitude } = position.coords;\n      setCoords({ lat: latitude, lng: longitude });\n    });\n  }, []);\n\n  // when user clicks the search button, it'll:\n  // 1. search yelp api for restaurants with this name\n  // 2. reset the input field\n  const search = async () => {\n    /*\n    setLoading(true);\n    const { data } = await axios.get(\n      `http://localhost:8000/api/restaurants/${searchTerm}/${coords.lat}/${coords.lng}`\n    );\n\n    setRestaurants(data);\n    setLoading(false);\n    */\n  };\n\n\n \n\n  return (\n    \n    <div className=\"main-container\">\n      <div className=\"searchBar\">\n      <div className = 'wrapper'>\n        {/* searchbar where usser would input their restaurant name */}\n          <input\n            placeholder=\"Search something\"\n            value={searchTerm}\n            onChange={(event) => setSearchTerm(event.target.value)}\n          />\n          <button className='submit' onClick={search} disabled={loading}>\n            Send\n          </button>\n        </div>   \n      </div>\n    </div>\n  );\n  \n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAO,oBAAoB;AAE3B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,UAAU,EACVC,gBAAgB,QACX,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;;EAExD;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA;EACA;EACA,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;;EAGlD;EACA;EACAE,SAAS,CAAC,MAAM;IACdsB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACrD,IAAI,CAACA,QAAQ,EAAE;QACbd,gBAAgB,CAAC,IAAI,CAAC;MACxB;MACA,MAAM;QAAEe,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACX,MAAM;MAC/CC,SAAS,CAAC;QAAEC,GAAG,EAAEU,QAAQ;QAAET,GAAG,EAAEU;MAAU,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI,CASD;EAKD,oBAEEvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BzB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC1BzB,OAAA;QAAKwB,SAAS,EAAG,SAAS;QAAAC,QAAA,gBAEtBzB,OAAA;UACE0B,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAExB,UAAW;UAClByB,QAAQ,EAAGC,KAAK,IAAKzB,aAAa,CAACyB,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvD,eACFlC,OAAA;UAAQwB,SAAS,EAAC,QAAQ;UAACW,OAAO,EAAEZ,MAAO;UAACa,QAAQ,EAAE7B,OAAQ;UAAAkB,QAAA,EAAC;QAE/D;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAGV,CAAC;AAAChC,EAAA,CAtEID,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAwEV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}